Classes:
- Board.java
- Game.java

Board.java:
    Vars:
        /** Width of the board. */
        private static final int _WIDTH;

        /** Height of the board. */
        private static final int _HEIGHT;

        /** This is how the board is stored.  '-' denotes empty
         *  space, 'O' denotes a miss, '*' denotes a hit, and
         *  'X' denotes a ship.
         *  */
        private char[][] _FIELD;

        /** Stores player name. */
        private static String _PLYRNAME;

        /** True if player has ships remaining, false otherwise. */
        private boolean _ALIVE;

        /** A list of moves made to this board. */
        private Stack<String> _MVLIST;

    Methods:
        /** Board constructor.  Stores player name, handles an
         *  ArrayList of ship placements and puts the ships on
         *  the board.
         *  @param playerName
         *  @param shipPlacements
         *  */
        public Board(String playerName, ArrayList<String[]> shipPlacements)

        /** Checks if a ship can be placed.
         * @param len
         * @param dir
         * @param loc
         */
        boolean canPlace(int len, char dir, String loc)

        /** Places a ship on the board of a specific length len
         *  in a direction dir at square loc.
         * @param len
         * @param dir
         * @param loc
         */
        void placeShip(int len, char dir, String loc)

        /** Checks if a spot is not hit yet.
         * @param move
         */
        boolean canMove(String move)

        /** Places a shot on the board.
         * @param move
         */
        void move(String move)

        /** Prints out a textual rendition of the board
         * according to '-' denotes empty space, 'O' denotes
         * a miss, '*' denotes a hit, and 'X' denotes a ship.
         * Notably, this is the users perspective, showing all boats.
         */
        void printBoard()

        /** Prints out a textual rendition of the board
         * according to '-' denotes empty space, 'O' denotes
         * a miss, and '*' denotes a hit.  Notably, this is a
         * ship-less because this view is for the other player.
         */
        void printHits()

        /** This reverts the last shot placed on the board. */
        void undo()

        /** This resets the board to before ships were placed. */
        void reset()

Game.java:
    Vars:
    private static final _MAXMV;
    private int _MVCNT;
    private int _PLYRTURN;
    private int _WINNER;
    private Board _BRDONE;
    private Board _BRDTWO;


    Methods:
    void initialize()
    void resetBoard()
    void makeMove(String move)
    boolean isWinner()

